#! /bin/bash -l

# Set version number
cores=$(grep -c -P '^core id\t' /proc/cpuinfo)
obsnum=OBSNUM
base=BASEDIR

datadir="${base}/${obsnum}"
cd ${datadir} || exit

metafits=$(ls -t ${obsnum}*metafits* | head -1)

# Set up telescope-configuration-dependent options
if [[ $obsnum -lt 1151402936 ]] ; then
    telescope="MWA128T"
    basescale=1.1
    imsize=4000
    robust=-1.0
elif [[ $obsnum -ge 1151402936 ]] && [[ $obsnum -lt 1191580576 ]] ; then
    telescope="MWAHEX"
    basescale=2.0
    imsize=2000
    robust=-2.0
elif [[ $obsnum -ge 1191580576 ]] ; then
    telescope="MWALB"
    basescale=0.6
    imsize=8000
    robust=0.0
fi

# Set up channel-dependent options
chan=$(pyhead.py -p CENTCHAN ${metafits} | awk '{print $3}')
# Pixel scale
scale=$(echo "$basescale / $chan" | bc -l) # At least 4 pix per synth beam for each channel

# Small images fine-channel inversion (no cleaning)
# Split into three blocks in order to work within constraints of number of open files on Pawsey systems
wsclean -mgain 1 \
    -niter 0 \
    -make-psf \
    -name ${obsnum}_fine \
    -size 256 256 \
    -scale ${scale:0:8} \
    -weight natural \
    -pol I \
    -channel-range 0 1024 \
    -channels-out 1024 \
    -data-column DATA \
    ${obsnum}.ms

mkdir block_1
rm ${obsnum}_fine*-image.fits
rm ${obsnum}_fine*-psf.fits
mv ${obsnum}_fine*-dirty.fits block_1

wsclean -mgain 1 \
    -niter 0 \
    -make-psf \
    -name ${obsnum}_fine \
    -size 256 256 \
    -scale ${scale:0:8} \
    -weight natural \
    -pol I \
    -channel-range 1024 2048 \
    -channels-out 1024 \
    -data-column DATA \
    ${obsnum}.ms

mkdir block_2
rm ${obsnum}_fine*-image.fits
rm ${obsnum}_fine*-psf.fits
mv ${obsnum}_fine*-dirty.fits block_2

wsclean -mgain 1 \
    -niter 0 \
    -make-psf \
    -name ${obsnum}_fine \
    -size 256 256 \
    -scale ${scale:0:8} \
    -weight natural \
    -pol I \
    -channel-range 2048 3072 \
    -channels-out 1024 \
    -data-column DATA \
    ${obsnum}.ms

mkdir block_3
rm ${obsnum}_fine*-image.fits
rm ${obsnum}_fine*-psf.fits
mv ${obsnum}_fine*-dirty.fits block_3

# Tidy up the images and put them back in the original observation directory
if [[ -d block_1 ]] && [[ -d block_2 ]] && [[ -d block_3 ]]
then
    cd block_1 || exit
    mv ${obsnum}_fine-MFS-dirty.fits ${obsnum}_fine-MFS1-dirty.fits
    
    cd ../block_2  || exit
    for file in *-dirty.fits
    do
        chan=${file:16:4}
        if [[ "$chan" != "MFS-" ]]
        then
        # Remove front-padded zeros
            chan=$(echo $chan | sed 's/^0*//')
            ((chan+=1024))
            mv "${file}" "${file:0:16}${chan}${file:20:30}"
        else
            mv "${file}" "${file:0:16}MFS2-${file:20:30}"
        fi
    done

    cd ../block_3 || exit
    for file in *-dirty.fits
    do
        chan=${file:16:4}
        if [[ "$chan" != "MFS-" ]]
        then
            # Remove front-padded zeros
            chan=$(echo $chan | sed 's/^0*//')
            ((chan+=2048))
            mv "${file}" "${file:0:16}${chan}${file:20:30}"
        else
            mv "${file}" "${file:0:16}MFS3-${file:20:30}"
        fi
    done

    cd ../
    mv block_?/${obsnum}*fits ./
    rmdir block_1 block_2 block_3

    # Perform the primary beam correction using the MWA FEE beam
    python "${GXSLBASE}"/bin/update_bscale.py --metafits=${obsnum}.metafits --images=${obsnum}_fine-*-dirty.fits

    # Calculate the RMS of each image
    python "${GXSLBASE}"/bin/rms_par.py --images=${obsnum}_fine-*-dirty.fits
else
    echo "Not all block directories were found -- imaging failed, or directory was already tidied."
fi    
